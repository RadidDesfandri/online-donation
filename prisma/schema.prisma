// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String?
  avatar    String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donations        Donation[]
  favorites        Favorite[]
  ProviderApproval ProviderApproval[]
}

enum Role {
  USER
  PROVIDER
  ADMIN
}

model Donation {
  id        String   @id @default(uuid())
  amount    Float
  message   String?
  donorName String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User       @relation(fields: [userId], references: [id])
  favorites Favorite[]
}

model ProviderApproval {
  id         String   @id @default(uuid())
  isApproved Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Favorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId     String
  user       User     @relation(fields: [userId], references: [id])
  donationId String
  donation   Donation @relation(fields: [donationId], references: [id])
}
